% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_mpspline_optimized.R
\name{fit_mpspline_optimized}
\alias{fit_mpspline_optimized}
\title{Fit Mass-Preserving Spline to a Single Soil Profile}
\usage{
fit_mpspline_optimized(vals, spline_info, dOut, vlow, vhigh, depth_res = 1)
}
\arguments{
\item{vals}{Numeric vector of input values across input soil depth intervals (e.g., from one raster pixel).}

\item{spline_info}{List output from \code{\link{precompute_spline_structures}} that contains spline matrix components.}

\item{dOut}{Numeric vector defining output depth intervals (e.g., \code{c(0,30,60)}).}

\item{vlow}{Minimum bound to truncate spline predictions (e.g., 0).}

\item{vhigh}{Maximum bound to truncate spline predictions (e.g., 100).}

\item{depth_res}{Numeric; resolution for interpolating spline (e.g., 1 = 1cm steps).}
}
\value{
A numeric vector of spline-averaged values for each specified output depth interval.
}
\description{
Applies the mass-preserving spline algorithm to a numeric vector of soil profile values and returns averaged values over specified output depth intervals. It uses precomputed matrix structures for efficiency.
}
\examples{
\dontrun{

clay_urls <- c(
  '/vsicurl/https://esoil.io/TERNLandscapes/Public/Products/TERN/SLGA/CLY/CLY_000_005_EV_N_P_AU_TRN_N_20210902.tif',
  '/vsicurl/https://esoil.io/TERNLandscapes/Public/Products/TERN/SLGA/CLY/CLY_005_015_EV_N_P_AU_TRN_N_20210902.tif',
  '/vsicurl/https://esoil.io/TERNLandscapes/Public/Products/TERN/SLGA/CLY/CLY_015_030_EV_N_P_AU_TRN_N_20210902.tif',
  '/vsicurl/https://esoil.io/TERNLandscapes/Public/Products/TERN/SLGA/CLY/CLY_030_060_EV_N_P_AU_TRN_N_20210902.tif',
  '/vsicurl/https://esoil.io/TERNLandscapes/Public/Products/TERN/SLGA/CLY/CLY_060_100_EV_N_P_AU_TRN_N_20210902.tif',
  '/vsicurl/https://esoil.io/TERNLandscapes/Public/Products/TERN/SLGA/CLY/CLY_100_200_EV_N_P_AU_TRN_N_20210902.tif'
)

clay_stack <- terra::rast(clay_urls)
aoi <- terra::ext(149.00, 149.10, -36.00, -35.90)
clay_crop <- terra::crop(clay_stack, aoi)

vals <- terra::extract(clay_crop, cbind(149.05, -35.95))[1, -1]

dIn <- c(0, 5, 15, 30, 60, 100, 200)
spline_info <- precompute_spline_structures(dIn, lam = 0.1)

fit <- fit_mpspline_optimized(
  vals = vals,
  spline_info = spline_info,
  dOut = c(0, 30, 60),
  vlow = 0,
  vhigh = 100,
  depth_res = 1
)

fit
}

}
\seealso{
\code{\link{precompute_spline_structures}}, \code{\link{ea_rasSp_fast}}
}
\author{
Brendan Malone
}
\keyword{methods}
